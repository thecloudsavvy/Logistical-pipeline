name: Deployment Workflow
on:
    push:
      branches:
        - master

jobs:
    pusher:
        runs-on: self-hosted
        steps:
            - name: "echo the code"
              run: echo "Push the code"
            - name: confirm the repository of Docker Hub
              uses: actions/checkout@v4
            - name: Logging into Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: "Build the image for the App"
              env:
                IMAGE_NAME: logis2
                VERSION: newest
                USERNAME: abatan
              run: |
                  docker build -t $USERNAME/$IMAGE_NAME:$VERSION .
                  docker push $USERNAME/$IMAGE_NAME:$VERSION
                  docker build -t $USERNAME/owasp:latest docker/
                  docker push $USERNAME/owasp:latest
            # - name: SonarQube Scan
            #   uses: sonarsource/sonarqube-scan-action@v1.2.0
            #   env:
            #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #     SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
            - name: Run OWASP Dependency-Check
              run: |
                docker run --rm -v $(pwd):/src $USERNAME/owasp:latest \
                --project "MyProject" --scan /src --format "ALL" --out /src/dependency-check-report
            - name: Upload OWASP Dependency-Check report
              uses: actions/upload-artifact@v2
              with:
                  name: dependency-check-report
                  path: dependency-check-report

            # - name: "install apache"
            #   run: |
            #       sudo apt-get update
            #       sudo apt-get install apache2 -y
            #       sudo systemctl start apache2
            #       sudo systemctl enable apache2
            #       sudo chown -R $USER:$USER /var/www/html
            #       cd /var/www/html
            #       sudo rm -rf index.html
            #       git clone https://github.com/thecloudsavvy/Logistical-pipeline.git . 
            #       sudo systemctl restart apache2  